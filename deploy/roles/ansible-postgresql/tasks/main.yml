---
- name: Configure the PostgreSQL APT key
  apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc state=present

- name: Configure the PostgreSQL APT repositories
  apt_repository: repo="deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release}}-pgdg main"
                  state=present

- name: Install PostgreSQL
  apt: pkg={{ item }} state=present
  with_items:
    - postgresql-{{ postgresql_version }}={{ postgresql_package_version }}
    - postgresql-server-dev-{{ postgresql_version }}={{ postgresql_package_version }}

- name: Install postgres contrib
  apt: pkg=postgresql-contrib-{{ postgresql_version }} state=present

- name: Configure PostgreSQL host-based authentication
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
  notify:
    - Restart PostgreSQL

- name: Configure PostgreSQL
  template: src=postgresql.conf.j2 dest=/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
  notify:
    - Restart PostgreSQL

- name: Drop database
  postgresql_db: name={{ dbname }}
                 encoding='UTF-8'
                 state=absent
  sudo: yes
  sudo_user: postgres

- name: Ensure database is created
  postgresql_db: name={{ dbname }}
                 encoding='UTF-8'
  sudo: yes
  sudo_user: postgres

- name: Enable hstore support on db
  command: psql -d {{ dbname }} -c "CREATE EXTENSION hstore;"
  sudo: yes
  sudo_user: postgres
  ignore_errors: yes

- name: Ensure user has access to database
  postgresql_user: db={{ dbname }} password={{ dbpass }} name={{ dbuser }} role_attr_flags=NOSUPERUSER,NOCREATEDB
  sudo: yes
  sudo_user: postgres

- name: Create tables for all models in flask
  command: python {{ python_app_dir}}/make_tables.py


